#ifndef test_double_gmock_hpp
#define test_double_gmock_hpp
#include "test_double.hpp"
#include "gmock/gmock.h"

namespace TestDouble {
class MockSimple : public Simple {
public:
    MOCK_METHOD0(func1, int());
    MOCK_METHOD1(func2, void(int x));
    MOCK_METHOD1(func2, void(double x));
    MOCK_METHOD1(func2, void(double * x));
    MOCK_METHOD2(func3, void(long x, long y));
    MOCK_METHOD1(func3, void(long x));
    MOCK_METHOD1(opAssign, void(const Simple & other));
    virtual void operator=(const Simple & other) {
        opAssign(other);
    }
    MOCK_METHOD1(opAssign, int(int other));
    virtual int operator=(int other) {
        return opAssign(other);
    }
    MOCK_METHOD0(func3, void());
};
} //NS:TestDouble

#endif // test_double_gmock_hpp
